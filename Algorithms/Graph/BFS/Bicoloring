#include<bits/stdc++.h>
using namespace std;

vector<int>edge[100];
int visited[100];

bool bfs(int start)
{
    queue<int>q;
    q.push(start);
    visited[start]=1;
    while(!q.empty()){
        int u=q.front();
        q.pop();
        for(int i=0; i<edge[u].size();i++){
            int v=edge[u][i];
            if(visited[v]==0){
                if(visited[u]==1){visited[v]=2;}
                else {visited[v]=1;}


                q.push(v);
            }
            else
            {

                if(visited[u]==visited[v])return false;
            }
        }
    }
    return true;
}
int main()
{
    int e,u,v,start;
    cout<<"Enter the edge of graph ";cin>>e;
    cout<<"Input the connected node "<<endl;
    for(int i=0; i<e; i++){
        cin>>u>>v;
        edge[u].push_back(v);
        edge[v].push_back(u);
    }
    cout<<"Enter the node from starting ";cin>>start;
    if(bfs(start))cout<<"yes"<<endl;
    else cout<<"No"<<endl;


    return 0;
}
