#include<bits/stdc++.h>
using namespace std;

/**
Time Complexity: O(n^3)
Auxiliary Space: O(n^2)
*/
int MatrixChainOrder(int p[], int n)
{
    int M[n][n],i,j,k,L,q;
    for(i=0; i<n; i++)M[i][i]=0;
    for(L=1; L<n; L++)
    {
        for(i=0; i<n-L-1; i++)
        {
            j=i+L;
            M[i][j] = INT_MAX;
            for(k=i; k<j; k++)
            {
                q = M[i][k] + M[k+1][j] + p[i]*p[k+1]*p[j+1];
                if (q < M[i][j])M[i][j] = q;

            }
        }

    }
    return M[0][n-2];
}
int main()
{
    int n;
    cout<<"Input number of dimensions :";cin>>n;

    int p[n];
    for(int i=0; i<n; i++)
    {
        cin>>p[i];
    }

    cout<<MatrixChainOrder( p,  n)<<endl;
    return 0;
}
