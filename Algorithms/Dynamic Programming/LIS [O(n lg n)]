#include<bits/stdc++.h>
using namespace std;
#define mx 10000
int result[mx], temp[mx], val[mx];
vector<int>v;

int LIS(int arr[], int n)
{

    for(int i=0; i<n; i++)result[i]=-1;

    int lenght=0;
    temp[0]=0;
    val[0]=arr[0];
    for(int i=1; i<n; i++)
    {
        if(arr[i]>val[lenght])
        {
            val[++lenght]=arr[i];
            temp[lenght]=i;
            result[i]=temp[lenght-1];

        }
        else if(arr[i]<val[0])
        {
            val[0]=arr[i];
            temp[0]=i;
            //result[i]=-1;
        }
        else
        {
            int indx = upper_bound(val, val+lenght, arr[i])-val;
            val[indx]=arr[i];
            temp[indx]=i;
            result[i]=temp[indx-1];
        }
    }


    return lenght+1;
}


void Path( int indx, int arr[])
{

    if(indx==-1)return;
    Path(result[indx], arr);
    cout<<arr[indx]<<" ";
}

int main()
{
    int arr[]={ 3, 4, -1, 5, 8, 2, 3, 12, 7, 9, 10 };
    int n=11;
    int ln = LIS(arr, n);
   cout<<"the length of LIS is : "<<ln<<endl;
   cout<<"Path are : " ;
    Path(temp[ln-1], arr);



    return 0;
}
